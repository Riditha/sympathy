
/*
 * This file is part of Sympathy
 * Copyright (c) 2017-2018 Job and Esther Technologies Oy
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

class is WebServerWithDatabase:

import sympathy
import sympathy.dbapp
import sympathy.service
import capex.data

func configure(key as string, value as string, relativeTo as File, error as Error) override as bool
{
	if key == "authServerUrl" {
		AuthServerApi.setAuthServerUrl(value)
		return true
	}
	return base.configure(key, value, relativeTo, error)
}

func initializeDatabase as bool
{
	var profile = SQLTableInfo.forName("profile")
	profile.addStringKeyColumn("userid")
	profile.addStringColumn("firstname")
	profile.addStringColumn("lastname")
	profile.addStringColumn("organization")
	assert ensureTableExists(profile)
	return true
}

func initializeServer(server as HTTPServer) override as bool
{
	assert base.initializeServer(server)
	assert initializeDatabase()
	var handler = new ApiHandler()
	handler.setDb(getDb())
	server.pushRequestHandler(handler)
	return true
}

main:
	return new this().executeMain(args)
