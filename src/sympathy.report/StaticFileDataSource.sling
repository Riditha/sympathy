
/*
 * This file is part of Sympathy
 * Copyright (c) 2017-2018 Job and Esther Technologies Oy
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

class is ReportDataSource:

func forFile(file as File) static as this
{
	var v = new this()
	assert v.readFile(file)
	return v
}

var fields as DynamicVector
var records as DynamicVector

func readFile(file as File) as bool
{
	var data = assert JSONParser.parse(file) as DynamicVector
	assert fields = data.getVector(0)
	data.remove(0)
	records = data
	return true
}

class MyIterator is Iterator<DynamicMap>
{
	prop fields as DynamicVector
	prop iterator as Iterator<object>

	func next as DynamicMap
	{
		assert iterator
		var o = assert iterator.next() as DynamicVector:
			iterator = null
		var v = new DynamicMap()
		for(var n=0; n<fields.getSize(); n++):
			v.set(fields.getString(n), o.get(n))
		return v
	}
}

func getDataRecords(query as string) as Iterator<DynamicMap>
{
	assert fields && records
	var v = new MyIterator()
	v.setFields(fields)
	v.setIterator(records.iterate())
	return v
}
