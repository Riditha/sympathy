
/*
 * This file is part of Sympathy
 * Copyright (c) 2016-2018 Job and Esther Technologies Oy
 * Copyright (c) 2018 Eqela Oy
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License, version 3,
 * as published by the Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

class is DynamicMapObject imports cape:

var data as DynamicMap

ctor
{
	data = new DynamicMap()
}

func getId as string
{
	return(data.getString("id"))
}

func setId(value as string) as this
{
	data.set("id", value)
	return(this)
}

func getTitle as string
{
	return(data.getString("title"))
}

func setTitle(value as string) as this
{
	data.set("title", value)
	return(this)
}

func getIntro as string
{
	return(data.getString("intro"))
}

func setIntro(value as string) as this
{
	data.set("intro", value)
	return(this)
}

func toDynamicMap as DynamicMap
{
	return(data.duplicateMap())
}

func fromDynamicMap(map as DynamicMap)
{
	data.mergeFrom(map)
}
