
/*
 * This file is part of Sympathy
 * Copyright (c) 2016-2018 Job and Esther Technologies Oy
 * Copyright (c) 2018 Eqela Oy
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License, version 3,
 * as published by the Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

class:

prop channelId as string
prop channelCreatorUserId as string
prop title as string
prop externalId as string
prop timeStampCreated as long
prop timeStampLastUpdated as long
var engine protected as ChatEngine

func onNewDataMessage(message as ChatMessage, connection as ChatConnectionHandler = null)
{
	if String.isEmpty(channelId) {
		channelId = message.getChannelId()
		assert String.isNotEmpty(channelId)
	}
	if connection {
		message.setTitle(title)
		message.setChannelCreatorUserId(channelCreatorUserId)
		message.setChannelId(channelId)
		message.setExternalId(externalId)
		var command = assert ChatMessage.forMessageSavedCommand(message, this)
		assert connection.sendMessage(command) > 0 {
			var user = assert connection.getUser()
			engine.logError("Failed to send response to user: '" .. user.getUserId() .. "'")
		}
		message.removeSendId()
	}
	engine.broadcastMessage(message)
}

func setEngine(engine as ChatEngine):
	this.engine = engine
