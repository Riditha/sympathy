
/*
 * This file is part of Sympathy
 * Copyright (c) 2017 Job and Esther Technologies, Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

class:

ui LayerWidget
{
	CanvasWidget {
		widgetColor = Color.white()
	}
	VerticalScrollerWidget {
		AlignWidget {
			VerticalBoxWidget : 0.5, 0.5 {
				widgetMargin = context.getHeightValue("1mm")
				widgetSpacing = context.getHeightValue("3mm")
				widgetWidthRequest = context.getWidthValue("100mm")
				ImageWidget {
					widgetImageResource = "sympathy_logo"
					widgetImageScaleMethod = ImageWidget.FIT
				}
				VerticalBoxWidget {
					widgetSpacing = context.getHeightValue("1mm")
					TextInputWidget serverUrl {
						widgetType = TextInputWidget.TYPE_URL
						widgetPlaceholder = "Server URL"
						widgetPadding = context.getHeightValue("2mm")
						widgetBackgroundColor = Color.forRGB(0xEF, 0xEF, 0xEF)
					}
					TextInputWidget serverSecret {
						widgetType = TextInputWidget.TYPE_PASSWORD
						widgetPlaceholder = "Server Secret"
						widgetPadding = context.getHeightValue("2mm")
						widgetBackgroundColor = Color.forRGB(0xEF, 0xEF, 0xEF)
					}
					TextButtonWidget {
						widgetText = "Login"
						widgetClickHandler = func {
							var url = serverUrl.getWidgetText()
							var secret = serverSecret.getWidgetText()
							if(String.isEmpty(url)) {
								context.showErrorDialog("Server URL must be supplied.")
								return
							}
							var api = new APIClient()
							api.setContext(context)
							api.setParentWidget(thisWidget)
							api.setApiUrl(url)
							api.setApiSecret(secret)
							api.getServerInfo(func(serverName as string, serverVersion as string) {
								NavigationWidget.pushToContainer(thisWidget, new MainWidget(context).setApi(api))
							})
						}
						widgetBackgroundColor = Color.forRGB(128, 128, 255)
						widgetTextColor = Color.white()
					}
				}
				AlignWidget {
					LabelWidget : 0.5, 0.5 {
						widgetText = VALUE "copyright"
					}
				}
			}
		}
	}
}
